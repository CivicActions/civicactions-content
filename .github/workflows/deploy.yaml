on:
  push:
    branches:
      - "*"
    tags:
      - v*
jobs:
  setup:
    runs-on: self-hosted
    env:
      SKAFFOLD_VERSION: v2.8.0
      SKAFFOLD_HASH: dd223353a9c0e377ce7618ae99eeb446b2c7fc73718d3ac407beccb9f5127de4
    steps:
      - uses: actions/checkout@v1
      - uses: azure/setup-kubectl@v1
      - name: Auth Kubernetes to GCR
        run: |
          kubectl --dry-run=client -o yaml --namespace civicactions-content create secret docker-registry regcred \
          --docker-server=gcr.io \
          --docker-username=_json_key \
          --docker-password='${{ secrets.GCR_KEY }}' \
          --docker-email=cicd-docker@example.com | kubectl apply -f -
      - name: Auth Kaniko to GCR
        run: |
          kubectl --dry-run=client -o yaml --namespace civicactions-content create secret generic kaniko-secret \
          --from-literal=kaniko-secret='${{ secrets.GCR_KEY }}' | kubectl apply -f -
      - name: Auth Docker to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_KEY }}
      - name: Download Skaffold
        run: curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/${{ env.SKAFFOLD_VERSION }}/skaffold-linux-amd64
      - name: Check and install Skaffold
        run: |
          echo "Checking hash before install"
          if [ "$(sha256sum < skaffold | head -c 64)" = "${{ env.SKAFFOLD_HASH }}" ]; then \
            sudo install skaffold /usr/local/bin/; \
          else \
            echo "Hash mismatch"; \
            exit 1; \
          fi
      - name: Add/update secrets
        run: |
          kubectl --dry-run=client -o yaml --namespace civicactions-content create secret generic civicactions-content \
          --from-literal=JWT_SECRET='${{ secrets.JWT_SECRET }}' \
          --from-literal=ADMIN_JWT_SECRET='${{ secrets. ADMIN_JWT_SECRET}}' \
          --from-literal=DATABASE_HOST='${{ secrets.DATABASE_HOST }}' \
          --from-literal=DATABASE_PASSWORD='${{ secrets.DATABASE_PASSWORD }}' \
          --from-literal=DATABASE_DEBUG='${{ secrets.DATABASE_DEBUG }}' \
          --from-literal=STRAPI_LOG_LEVEL='${{ secrets.STRAPI_LOG_LEVEL }}' \
          --from-literal=APP_KEYS='${{ secrets.APP_KEYS }}' \
          --from-literal=API_TOKEN_SALT='${{ secrets.API_TOKEN_SALT }}' \
          --from-literal=TRANSFER_TOKEN_SALT='${{ secrets.TRANSFER_TOKEN_SALT }}' \
          --from-literal=PROD_TRANSFER_TOKEN='${{ secrets.PROD_TRANSFER_TOKEN }}' \
          --from-literal=MAILGUN_API_KEY='${{ secrets.MAILGUN_API_KEY }}' \
          --from-literal=STRAPI_GITHUB_ACTIONS_TRIGGER_TOKEN='${{ secrets.STRAPI_GITHUB_ACTIONS_TRIGGER_TOKEN }}' \
          --from-literal=GCS_SERVICE_ACCOUNT='${{ secrets.GCS_SERVICE_ACCOUNT }}' | kubectl apply -f -
  # If we are on a tag, then deploy to production, otherwise to stage:
  deploy_production:
    if: ${{ github.ref_type == 'tag' }}
    runs-on: self-hosted
    steps:
      - name: Deploy production site
        run: skaffold run --profile='production'
  deploy_stage:
    if: ${{ github.ref_type != 'tag' }}
    runs-on: self-hosted
    steps:
      - name: Delete stage site
        run: skaffold delete --profile='stage'
      - name: Install stage site
        run: skaffold run --profile='stage' --wait-for-deletions=true
